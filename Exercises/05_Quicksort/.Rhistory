knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
data <- read.csv("measurements_03_47.csv")
head(data)
# to calculate 95% confidence intervals, need mean and std
data1 <- data %>%
group_by(Type, Size) %>%
summarize(
mean = mean(Time),
n = length(Time),
std = sd(Time),
se = std / sqrt(n)
)
data1
# CI is +- 2* std
data_CI <-  data1 %>%
mutate(
CI_upper = mean + 2*std,
CI_lower = mean - 2*std)
data_CI
data_CI$Type = as.factor(data_CI$Type)
data_CI %>%
ggplot(aes(Size, mean, color=Type)) +
geom_point() +
geom_errorbar(aes(ymin=CI_upper, ymax=CI_lower)) +
geom_line() +
scale_y_log10()   # to see better since it's small
data_CI %>%
ggplot(aes(Size, mean, color=Type)) +
geom_point() +
geom_smooth(method='lm')
model <- lm(mean ~ Type, data = data_CI)
summary(model)
contrasts(data_CI$Type)
# data_CI %>%
#   group_by(Type) %>%
#   summarise(
#     mean_T = mean(mean)
#   )
model <- lm(mean ~ Size, data = data_CI)
summary(model)
model <- lm(mean ~ Type * Size, data = data_CI)
summary(model)
data_builtin<- subset(data_CI, Type == " Built-in")
model <- lm(mean ~ Size, data = data_builtin)
summary(model)
data_seq<- subset(data_CI, Type == " Sequential")
model <- lm(mean ~ Size, data = data_seq)
summary(model)
data_parallel<- subset(data_CI, Type == " Parallel")
model <- lm(mean ~ Size, data = data_parallel)
summary(model)
contrasts(data_CI$Type) = contr.sum()
contrasts(data_CI$Type) = contr.sum(3)
model <- lm(mean ~ Type + Size, data = data_CI)
summary(model)
contrasts(data_CI$Type) = contr.sum(3)
model <- lm(mean ~ Type * Size, data = data_CI)
summary(model)
contrasts(data_CI$Type) = contr.sum(3)
model <- lm(mean ~ Type + Size, data = data_CI)
summary(model)
contrasts(data_CI$Type) = contr.sum(3)
model <- lm(mean ~ Type * Size, data = data_CI)
summary(model)
model <- lm(mean ~ Type * Size, data = data_CI)
summary(model)
View(data_CI)
View(data_CI)
data_CI$Type
View(data_CI)
View(data_CI)
grandmean <- mean(data_CI$mean)
data_CI$Type
grandmean <- mean(data_CI$mean)
data_builtin<- subset(data_CI, Type == " Built-in")
builtin <- mean(data_CI$mean)
grandmean - builtin
data_CI$Type
grandmean <- mean(data_CI$mean)
data_builtin<- subset(data_CI, Type == " Built-in")
builtin <- mean(data_builtin$mean)
grandmean - builtin
contrasts(data_CI$Type) = contr.sum(3)
model <- lm(mean ~ Type * Size, data = data_CI)
summary(model)
#data_CI$Type
